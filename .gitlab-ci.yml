variables:
  REGISTRY_IMAGE: blazorwebassembly
  CURDATE: $CI_COMMIT_TIMESTAMP
  IMAGENAME: $REGISTRY_IMAGE-$CI_PIPELINE_IID
  TAGGED_IMAGENAME: vlapenkov/$IMAGENAME

stages:          # List of stages for jobs, and their order of execution
  - build  
  - deploy

build_data_api_dev_image:
  image: docker:latest
  stage: build
  before_script:    
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY    
  script:
    - echo "$IMAGENAME"
    - echo "$TAGGED_IMAGENAME"
    - cd ./My.BlazorWebAssembly
    #- docker build -f ./My.BlazorWebAssembly/Dockerfile --pull -t "$REGISTRY_IMAGE/data_store_api:develop" -f Dockerfile ..
    #- echo "$REGISTRY_IMAGE/data_store_api:develop"
    - docker build -t "$IMAGENAME" -f ./Dockerfile .
    - docker tag "$IMAGENAME"  "$TAGGED_IMAGENAME"
    - docker push "$TAGGED_IMAGENAME"    
    - echo "Build step3 ..."

#
#  only:
#    refs:
#      - master
#    changes:
#      - My.BlazorWebAssembly/**/*

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
