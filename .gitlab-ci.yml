variables:
  REGISTRY_IMAGE: $REGISTRY/blazorwebassembly

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build_data_api_dev_image:
  image: docker:latest
  stage: build
  before_script:
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY    
  script:
    - cd ./My.BlazorWebAssembly
    - docker build -f ./My.BlazorWebAssembly/Dockerfile --pull -t "$REGISTRY_IMAGE/data_store_api:develop" -f Dockerfile ..
    - docker push "$REGISTRY_IMAGE/data_store_api:develop"


  only:
    refs:
      - master
    changes:
      - My.BlazorWebAssembly/**/*

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
