@page "/weather"
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@using Microsoft.AspNetCore.Authorization
@using Blazored.LocalStorage
@using System.Net.Http.Headers
@using My.BlazorWebAssembly.Services
@using System.Text.Json
@inject IMessageService antMessage;
@inject IApiService apiService;
@attribute [Authorize]


<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts ;

    protected override async Task OnInitializedAsync()
    {               

        var result = await apiService.GetResult<WeatherForecast[]>("My.WebApi", "/api/WeatherForecast");

        forecasts = result.IsSuccess ? result.Data : Array.Empty<WeatherForecast>();

        if (!result.IsSuccess) antMessage.Error(result.ErrorMessages[0]);

    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);

        public string? Summary { get; set; }
    }
}
